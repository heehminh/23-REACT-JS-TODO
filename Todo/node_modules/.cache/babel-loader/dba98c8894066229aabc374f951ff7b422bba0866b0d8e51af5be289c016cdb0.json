{"ast":null,"code":"var _jsxFileName = \"/Users/heehminh/Desktop/2023 \\u1106\\u1175\\u11AB\\u1112\\u1174 WEB/react/23-React-JS-ToDo/src/components/List.js\";\nimport React from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  let {\n    todoData,\n    setTodoData\n  } = _ref;\n  const handleClick = id => {\n    let newToDoData = todoData.filter(data => data.id !== id);\n    setTodoData(newToDoData);\n  };\n  const handleCompleteChange = id => {\n    let newToDoData = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    });\n    setTodoData(newToDoData);\n  };\n  const handleEnd = result => {\n    // result 매개변수에는 source 항목 및 대상 위치와 같은 \n    // 드래그 이벤트에 대한 정보가 포함된다.\n    console.log(result);\n\n    // 목적지가 없으면 (이벤트 취소) 이 함수를 종료한다. \n    if (!result.destination) return;\n    const newTodoData = todoData;\n\n    // 1. 변경시키는 아이템을 배열에서 지워준다.\n    // 2. retrun 값으로 지워진 아이템을 잡아준다.\n    const [reorederItem] = newTodoData.splice(result.source.index, 1);\n\n    // 3. 원하는 자리에 reorederItem을 insert 해준다.\n    newTodoData.splice(result.destination.index, 0, reorederItem);\n    setTodoData(newTodoData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"todo\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [todoData.map((data, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: data.id.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.draggableProps,\n              ref: provided.innerRef,\n              ...provided.dragHandleProps,\n              className: `${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => handleCompleteChange(data.id),\n                defaultChecked: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: data.completed && \"line-through\",\n                children: [\" \", data.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"px-4 py-2 float-right\",\n                onClick: () => handleClick(data.id),\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 49\n              }, this)]\n            }, data.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","DragDropContext","Droppable","Draggable","List","todoData","setTodoData","handleClick","id","newToDoData","filter","data","handleCompleteChange","map","completed","handleEnd","result","console","log","destination","newTodoData","reorederItem","splice","source","index","provided","droppableProps","innerRef","toString","snapshot","draggableProps","dragHandleProps","isDragging","title","placeholder"],"sources":["/Users/heehminh/Desktop/2023 민희 WEB/react/23-React-JS-ToDo/src/components/List.js"],"sourcesContent":["import React from 'react'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nexport default function List({todoData, setTodoData}) {\n\n    const handleClick = (id) => {\n        let newToDoData = todoData.filter(data => data.id !== id)\n        setTodoData(newToDoData);\n    };\n\n    const handleCompleteChange = (id) => {\n        let newToDoData = todoData.map((data) => {\n            if (data.id === id) {\n            data.completed = !data.completed;\n            }\n            return data;\n        });\n        setTodoData(newToDoData);\n    };\n\n    const handleEnd = (result) => {\n        // result 매개변수에는 source 항목 및 대상 위치와 같은 \n        // 드래그 이벤트에 대한 정보가 포함된다.\n        console.log(result);\n\n        // 목적지가 없으면 (이벤트 취소) 이 함수를 종료한다. \n        if (!result.destination) return;\n\n        const newTodoData = todoData;\n\n        // 1. 변경시키는 아이템을 배열에서 지워준다.\n        // 2. retrun 값으로 지워진 아이템을 잡아준다.\n        const [reorederItem] = newTodoData.splice(result.source.index, 1);\n\n        // 3. 원하는 자리에 reorederItem을 insert 해준다.\n        newTodoData.splice(result.destination.index, 0, reorederItem);\n        setTodoData(newTodoData);\n    }\n\n  return (\n    <div>\n        <DragDropContext onDragEnd={handleEnd}>\n            <Droppable droppableId='todo'>\n                {(provided) => (\n                    <div {...provided.droppableProps} ref={provided.innerRef}>\n                        {todoData.map((data, index) => (\n                            <Draggable\n                                key = {data.id}\n                                draggableId = {data.id.toString()}\n                                index = {index}\n                                >\n                                {(provided, snapshot) => (\n\n                                    <div \n                                        key={data.id} \n                                        {...provided.draggableProps} \n                                        ref={provided.innerRef} \n                                        {...provided.dragHandleProps}\n                                        className={`${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"\n                                        } flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`}\n                                        >\n                                \n                                                <input \n                                                type=\"checkbox\" \n                                                onChange= {() => handleCompleteChange(data.id)}\n                                                defaultChecked={false} />\n                                                <span className={data.completed && \"line-through\"}>{\" \"}{data.title}</span>\n                                                <button className=\"px-4 py-2 float-right\" onClick={() => handleClick(data.id)}>x</button>\n                                            \n                                        </div>\n                                    \n                                 )}\n                                </Draggable>\n                            ))}  \n                            {provided.placeholder}  \n                        </div>\n                    )}\n            \n                </Droppable>\n            </DragDropContext>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}